name: Build and Deploy Chess Engine

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libx11-dev
        
    - name: Build desktop version
      run: |
        mkdir -p build && cd build
        cmake ..
        make
        
    - name: Build console version
      run: |
        mkdir -p build-console && cd build-console
        cmake -DNO_GRAPHICS=ON ..
        make
        
  build-web:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v13
      with:
        version: latest
        
    - name: Build web version
      run: |
        chmod +x build_web.sh
        ./build_web.sh
        
    - name: Upload web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/
        
  deploy-web:
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: build/web/
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/web
        
  build-docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build Docker image (no push)
      uses: docker/build-push-action@v5
      if: ${{ secrets.DOCKERHUB_USERNAME == '' || secrets.DOCKERHUB_TOKEN == '' }}
      with:
        context: .
        target: web-production
        push: false
        tags: chess-engine:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
      with:
        context: .
        target: web-production
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/chess-engine:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/chess-engine:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
